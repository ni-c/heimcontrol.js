extends layout

block content
  header.jumbotron.subhead#overview
    h1 Get started
    p.lead Get started with heimcontrol.js on your Raspberry Pi 
    
    section
    h2.page-header Installation
    | How to install Node.js, MongoDB and heimcontrol.js on your Raspberry Pi
    
    h3.page-header Screen
    | I recommend that you use&nbsp;
    a(href="http://linux.die.net/man/1/screen") screen
    | &nbsp;to install the software on your Raspberry Pi, because some commands will take more than four hours to complete and broken pipes suck.
    
    h4.page-header Git and Essentials
    p First you have to install the required debian packages:
    script(src="https://gist.github.com/ni-c/b2420a2d6b087466b034.js")

    h3.page-header Node.js
    p The next step is to install&nbsp;
      a(href="http://nodejs.org/") Node.js 
      | &nbsp;on your Raspberry Pi:
    script(src="https://gist.github.com/ni-c/f8684abbe0fd0b7b78de.js")

    h3.page-header MongoDB
    p If you are using a Raspberry Pi with 256MB RAM, then you have to edit the file 
      code /etc/dphys-swapfile  
      | and change the value of&nbsp; 
      code CONF_SWAPSIZE 
      | &nbsp;from&nbsp;
      strong 100  
      | &nbsp;to&nbsp;
      strong 200. 
     
    p You can find a Raspberry Pi version for
      a(href="http://www.mongodb.org") MongoDB 
      | on GitHub. With the following command you can build an install it:
    script(src="https://gist.github.com/ni-c/b760c210d4ec2ac6c106.js")
    
    p Now add the PATH to the MongoDB binaries. Open the file&nbsp;
      code /etc/environment
      | &nbsp;and add the following:
    script(src="https://gist.github.com/ni-c/9396c0e2d7bdcef92db0.js")
    
    p Finally you have to create a MongoDB user, the MongoDB database directory and register an upstart script:
    script(src="https://gist.github.com/ni-c/e3660f0a954b282b8bb8.js")
    
    h3.page-header heimcontrol.js
    p You only have to clone the GitHub repository and run&nbsp;
      code npm install
      | &nbsp;to install homecontrol.js
    script(src="https://gist.github.com/ni-c/3fc75069276ddf0fb90b.js")
    
    p Now you can run heimcontrol.js by typing&nbsp;
      code node heimcontrol.js
      | &nbsp;.

    section
    h2.page-header Documentation
    p Generation of the API description and the gh-pages.

    h3.page-header API
    p The source code documentation is automatically generated using&nbsp;
      a(href="http://yui.github.com/yuidoc/") YUIDoc
      | . You can find the latest documentation here:&nbsp;
      a(href="#{url}api/index.html") #{url}api/index.html
    p Or you can generate the documentation from the source code.
      script(src="https://gist.github.com/ni-c/d2819c27a525b0049308.js")
      | This will generate the documention in the&nbsp;
      code docs
      | &nbsp; directory of the project.
   
  section
    h3.page-header gh-pages
    p The gh-pages that you are currently reading can be found in the&nbsp;
      code gh-pages
      | &nbsp; branch of the project. They are generated from Jade-Templates using&nbsp;
      a(href="http://jnordberg.github.com/wintersmith/") http://jnordberg.github.com/wintersmith/
      | . To regenerate the documentation cd in your heimcontrol.js repository and type:
    script(src="https://gist.github.com/ni-c/34fe35fc78d18d86804a.js")
